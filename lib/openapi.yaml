# DO NOT EDIT THIS FILE
# This file is generated by the build in the API project.
# Instead edit the specification in specification/ of the API project."
openapi: 3.0.3
servers:
  - url: 'http://localhost'
info:
  title: GuestInfoSystemAPI
  description: Guest information for Bear Necessities
  version: 0.0.0
  contact:
    name: Bear Necessities
    email: info@librefoodpantry.org
    url: librefoodpantry.org
paths:
  /guests:
    description: All guests
    get:
      description: Gets all guests data.
      operationId: listGuests
      x-eov-operation-handler: endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestArray'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      description: Adds a new guest's data.
      operationId: createGuest
      x-eov-operation-handler: endpoints
      requestBody:
        description: Guest data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guest'
          headers:
            Location:
              description: URI of new item.
              explode: false
              required: true
              schema:
                minLength: 1
                nullable: false
                type: string
              style: simple
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  '/guests/{wneID}':
    description: Guest with given id.
    parameters:
      - name: wneID
        in: path
        required: true
        description: Western New England University ID of the guest whose info is desired.
        schema:
          $ref: '#/components/schemas/WNEID'
    get:
      description: Gets guest's data.
      operationId: retrieveGuest
      x-eov-operation-handler: endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      description: Modifies guest's data.
      operationId: replaceGuest
      x-eov-operation-handler: endpoints
      requestBody:
        description: Guest data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guest'
          headers:
            Location:
              description: URI of new item.
              explode: false
              required: true
              schema:
                minLength: 1
                nullable: false
                type: string
              style: simple
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      description: Deletes a guest's data.
      operationId: deleteGuest
      x-eov-operation-handler: endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guest'
          headers:
            Location:
              description: URI of new item.
              explode: false
              required: true
              schema:
                minLength: 1
                nullable: false
                type: string
              style: simple
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /version:
    description: Get current API version number
    get:
      description: Gets current operating version of the API
      operationId: getAPIVersion
      x-eov-operation-handler: endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIVersion'
components:
  responses:
    BadRequest:
      description: The request was malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EovError'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EovError'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EovError'
    ServerError:
      description: There was an error in the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EovError'
  schemas:
    EovError:
      description: Not Acceptable
      type: object
      example:
        message: '.response should have required property ''wneID'''
        errors:
          - path: .response.wneID
            message: should have required property 'wneID'
            errorCode: required.openapi.validation
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              message:
                type: string
              errorCode:
                type: string
    Guest:
      example:
        wneID: '123-23'
        residency: 'commuter'
        grad_year: 2023
        grad: "UG"
        date: "04-12-2023"
      description: Guest object
      type: object
      properties:
        wneID:
          $ref: '#/components/schemas/WNEID'
        residency:
          $ref: '#/components/schemas/Residency'
        grad_year:
          $ref: '#/components/schemas/Grad_Year'
        grad:
          $ref: '#/components/schemas/Grad'
        date:
          $ref: '#/components/schemas/Date'
      required:
        - wneID
        - residency
        - grad_year
        - grad
        - date
    GuestArray:
      type: array
      items:
        $ref: '#/components/schemas/Guest'
    WNEID:
      example: '123-23'
      description: Unique Western New England University identifier
      pattern: '^[0-9]{3}-[0-9]{2}$'
      type: string
    Residency:
      example: 'resident'
      description: whether the guest is a commuter or resident
      type: string
    Grad_Year:
      example: 2023
      description: graduation date of the guest
      type: number
    Grad:
      example: "UG"
      description: whether the guest is a grad or undergrad
      type: string
    Date:
      example: "04-12-2023"
      description: date of guest's registration
      type: string
    APIVersion:
      example: 1.2.3
      description: Current operating version of the API
      pattern: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'
      type: string
