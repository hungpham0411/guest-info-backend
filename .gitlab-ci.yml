image: docker:19.03.12
services:
  - docker:19.03.12-dind

stages:
  - commitlint
  - rabbitmq
  - build
  - test
  - release

commitlint:
  stage: commitlint
  image: node:12
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
  allow_failure: true
  before_script:
    - npm install --save-dev @commitlint/{config-conventional,cli}
    - chmod +x commitconfig.sh
    - ./commitconfig.sh
  script:
    - npx commitlint --from=$CI_COMMIT_BEFORE_SHA

commitlint-default:
  stage: commitlint
  image: node:12
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  before_script:
    - npm install --save-dev @commitlint/{config-conventional,cli}
    - chmod +x commitconfig.sh
    - ./commitconfig.sh
  script:
    - npx commitlint --from=$CI_COMMIT_BEFORE_SHA

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  RABBITMQ_IMAGE: ""

rabbitmq:
  stage: rabbitmq
  before_script:
    - apk add docker-compose
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose -f docker-compose.dev.yaml build --pull rabbitmq
    - docker tag rabbitmq $RABBITMQ_IMAGE
    - docker push $RABBITMQ_IMAGE

build:
  stage: build
  before_script:
    - apk add docker-compose
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $RABBITMQ_IMAGE
    - ci/build
    - docker tag backend-server $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_TEST_IMAGE

release:
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
